package me.twammer.domain

import org.springframework.validation.ObjectError;
import java.util.List;

import org.springframework.validation.Errors;

import grails.test.*

class TwamIntegrationTests extends GroovyTestCase {
    protected void setUp() {
        super.setUp()
    }

    protected void tearDown() {
        super.tearDown()
    }

	void testTwamBasicSave() {
		
		def twam = new Twam(message:"My First Twam", fromWho:"JimBob", timePosted:"1 min ago")
		twam.user = new User(userName:"Jim", password:"bob")
		
		twam.validate()
		
		
		Errors errors = twam.errors
		// should have errors because user is not nullable.
		assertNotNull errors
		List<ObjectError> errorsList = errors.allErrors
		for (ObjectError objectError: errorsList) {
			System.out.println("error:" + objectError.getDefaultMessage());
		}
	
		// make sure we can save it
		assertNotNull twam.save()
		
		
		assertNotNull twam.id
		
		// try to retrieve it.
		def newFoundTwam = Twam.get(twam.id);
		assertEquals 'JimBob',newFoundTwam.fromWho
	}
	
    void testTwamBasicNoUserSave() {
		
		def twam = new Twam(message:"My First Twam", fromWho:"JimBob", timePosted:"1 min ago")
		// make sure we can save it
		assertNull twam.save()
		
		Errors errors = twam.errors
		// should have errors because user is not nullable.
		assertNotNull errors
		List<ObjectError> errorsList = errors.allErrors
		for (ObjectError objectError: errorsList) {
			System.out.println("error:" + objectError.getDefaultMessage());
		}
		
		// make sure it doesn't have
		assertNull twam.id		
		
    }
}
